!function () { const e = window._wcl || {}; Object.defineProperties(e, { getUUID: { configurable: !0, enumerable: !0, value: function () { return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (e => (e ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> e / 4).toString(16))) } }, camelCase: { configurable: !0, enumerable: !0, value: function (e) { return e.replace(/-([a-z])/gi, (function (e, t) { return t.toUpperCase() })) } }, capitalize: { configurable: !0, enumerable: !0, value: function (e) { return e.replace(/^[a-z]{1}/, (function (e) { return e.toUpperCase() })) } }, classToTagName: { configurable: !0, enumerable: !0, value: function (e) { return e.replace(/([A-Z])/g, (function (e, t) { return "-" + t.toLowerCase() })).replace(/^-(.*)/, "$1") } }, isObject: { configurable: !0, enumerable: !0, value: e => e && "object" == typeof e && e.constructor === Object }, isNumeric: { configurable: !0, enumerable: !0, value: e => !isNaN(e - parseFloat(e)) }, isAPISupport: { configurable: !0, enumerable: !0, value: function (e, t) { let o, n; if (navigator.supports = navigator.supports || {}, navigator.supports.api = navigator.supports.api || {}, void 0 !== navigator.supports.api[e]) n = navigator.supports.api[e]; else { if (o = t ? t.tagName ? t.cloneNode(!0) : t : window, n = ["", "webkit", "moz", "o", "ms"].find((t => { let n; return n = t + (t ? this.capitalize(e) : e), o[n] })), n = void 0 !== n, ["localStorage", "sessionStorage"].includes(e) && n) try { localStorage.setItem("isapisupport", "dummy"), localStorage.removeItem("isapisupport") } catch (e) { n = !1 } navigator.supports.api[e] = n, o = null } return n } }, isEventSupport: { configurable: !0, enumerable: !0, value: function (e, t) { let o, n; return navigator.supports = navigator.supports || {}, navigator.supports.event = navigator.supports.event || {}, void 0 !== navigator.supports.event[e] ? n = navigator.supports.event[e] : (o = t ? t.tagName ? t.cloneNode(!0) : t : document.createElement("div"), n = `on${e}` in o, !n && o.setAttribute && (o.setAttribute(e, "return;"), n = "function" == typeof o[e]), navigator.supports.event[e] = n, o = null), n } }, isCSSPropertySupport: { configurable: !0, enumerable: !0, value: function (e) { let t, o; return navigator.supports = navigator.supports || {}, navigator.supports.css = navigator.supports.css || {}, e = /^-ms/.test(e) ? "ms" + this.camelCase(e.replace(/-ms/, "")) : this.camelCase(e), void 0 !== navigator.supports.css[e] ? o = navigator.supports.css[e] : (t = document.createElement("div"), o = e in t.style, navigator.supports.css[e] = o, t = null), o } }, isStaticImportSupport: { configurable: !0, enumerable: !0, value: () => { if (navigator.supports = navigator.supports || {}, void 0 === navigator.supports.staticImport) { const e = document.createElement("script"); navigator.supports.staticImport = "noModule" in e } return navigator.supports.staticImport } }, isDynamicImportSupport: { configurable: !0, enumerable: !0, value: () => { if (navigator.supports = navigator.supports || {}, void 0 === navigator.supports.dynamicImport) try { new Function('import("")'), navigator.supports.dynamicImport = !0 } catch (e) { navigator.supports.dynamicImport = !1 } return navigator.supports.dynamicImport } }, isPrefersColorSchemeSet: { configurable: !0, enumerable: !0, get: () => Array.from(document.styleSheets).some((e => { try { return Array.from(e.rules).some((e => e.media && /prefers-color-scheme:.*dark/i.test(e.conditionText))) } catch (e) { return !1 } })) }, isIOS: { configurable: !0, enumerable: !0, get: () => !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform) }, isMobile: { configurable: !0, enumerable: !0, value: () => navigator.userAgent.match(/(iPhone|iPod|iPad|Android|webOS|BlackBerry|IEMobile|Opera Mini)/i) || !1 }, grabEventLock: { configurable: !0, enumerable: !0, value: function () { return navigator.eventLock || function () { return this.addStylesheetRules(".scroll-lock", { overflow: "hidden", "pointer-events": "none" }), navigator.eventLock = e => { e.preventDefault(), e.stopImmediatePropagation() }, navigator.eventLock }.bind(this)() } }, scrollLock: { configurable: !0, enumerable: !0, value: function (e = !0, t = this.grabEventLock()) { (e = Boolean(e)) ? (document.body.classList.add("scroll-lock"), window.addEventListener("touchmove", t, { passive: !1 })) : (document.body.classList.remove("scroll-lock"), window.removeEventListener("touchmove", t)) } }, scrollX: { configurable: !0, enumerable: !0, get: () => e.getScroll().x, set: e => { document.documentElement && document.documentElement.scrollLeft ? document.documentElement.scrollLeft = e : document.body.scrollLeft = e } }, scrollY: { configurable: !0, enumerable: !0, get: () => e.getScroll().y, set: e => { document.documentElement && document.documentElement.scrollTop ? document.documentElement.scrollTop = e : document.body.scrollTop = e } }, rollTo: { configurable: !0, enumerable: !0, value: function (e, t = 0) { const { width: o, height: n } = this.getPageSize(), { width: r, height: a } = this.getViewportSize(); return void 0 !== e.nodeType && 1 === e.nodeType && "function" == typeof e.getBoundingClientRect && (e = this.getPosition(e).y), e += t, new Promise(((t, o) => { let r; const i = () => { let o = Math.ceil(.15 * (e - this.scrollY)); if (cancelAnimationFrame(r), scrollBy(0, o), this.scrollY < 0 || this.scrollY + a >= n || 0 === o || Math.abs(this.scrollY - e) <= Math.abs(o)) return this.scrollY = e, void t(); r = requestAnimationFrame(i) }; r = requestAnimationFrame(i) })) } }, maxZIndex: { configurable: !0, enumerable: !0, get: () => Array.from(document.querySelectorAll("body *")).map((e => parseFloat(window.getComputedStyle(e).zIndex))).filter((e => !isNaN(e))).sort(((e, t) => e - t)).pop() }, pointer: { configurable: !0, enumerable: !0, value: function (e) { let t, o, n, r; return n = document.documentElement, r = document.body || { scrollLeft: 0 }, t = e.pageX || e.clientX + (n.scrollLeft || r.scrollLeft) - (n.clientLeft || 0), r = document.body || { scrollTop: 0 }, o = e.pageY || e.clientY + (n.scrollTop || r.scrollTop) - (n.clientTop || 0), { x: t, y: o } } }, pursuer: { configurable: !0, enumerable: !0, value: function () { let e, t, o; return this.isEventSupport("touchstart") ? (e = "touchstart", t = "touchmove", o = "touchend") : void 0 !== navigator.msPointerEnabled && navigator.msPointerEnabled ? (e = "MSPointerDown", t = "MSPointerMove", o = "MSPointerUp") : (e = "mousedown", t = "mousemove", o = "mouseup"), { down: e, move: t, up: o } } }, purgeObject: { configurable: !0, enumerable: !0, value: function (e) { this.isObject(e) && Object.keys(e).forEach((t => { let { [t]: o } = e; if (Array.isArray(o)) for (; o.length;)o.pop(); e[t] = null })) } }, isPiPSupport: { configurable: !0, enumerable: !0, value: function () { if (navigator.supports = navigator.supports || {}, void 0 === navigator.supports.PiP) { const e = document.createElement("video"); this.isMobile(); navigator.supports.PiP = this.isAPISupport("requestPictureInPicture", e) || e.webkitSupportsPresentationMode && "function" == typeof e.webkitSetPresentationMode } return navigator.supports.PiP } }, isFullscreenSupport: { configurable: !0, enumerable: !0, value: function () { if (navigator.supports = navigator.supports || {}, !navigator.supports.fullscreen) { const e = document.createElement("div"); let t = !1, o = !1, n = "", r = ""; e.requestFullscreen ? (t = "requestFullscreen", o = "exitFullscreen", n = "fullscreenElement", r = "fullscreenchange") : e.webkitRequestFullscreen && (t = "webkitRequestFullscreen", o = "webkitExitFullscreen", n = "webkitFullscreenElement", r = "webkitfullscreenchange"), navigator.supports.fullscreen = { request: t, exit: o, element: n, event: r } } return navigator.supports.fullscreen } }, supports: { configurable: !0, enumerable: !0, value: function () { let e; if (navigator.supports = navigator.supports || {}, !navigator.supports.wp) { e = !0; try { } catch (t) { e = !1 } navigator.supports.wp = { classes: e, customElements: "customElements" in window, import: "import" in document.createElement("link"), shadowDOM: !!HTMLElement.prototype.attachShadow, template: "content" in document.createElement("template") } } return navigator.supports.wp } }, getScroll: { configurable: !0, enumerable: !0, value: () => { let e, t; return e = self.pageXOffset ? self.pageXOffset : document.documentElement && document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft, t = self.pageYOffset ? self.pageYOffset : document.documentElement && document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop, { x: e, y: t } } }, getPosition: { configurable: !0, enumerable: !0, value: e => { let t, o; for (t = 0, o = 0; null != e;)t += e.offsetLeft, o += e.offsetTop, e = e.offsetParent; return { x: t, y: o } } }, getPageSize: { configurable: !0, enumerable: !0, value: function () { let e, t, o, n; const { width: r, height: a } = this.getViewportSize(); return window.innerHeight && window.scrollMaxY ? (e = document.body.scrollWidth, t = window.innerHeight + window.scrollMaxY) : document.body.scrollHeight > document.body.offsetHeight ? (e = document.body.scrollWidth, t = document.body.scrollHeight) : (e = document.body.offsetWidth, t = document.body.offsetHeight), o = e < r ? r : e, n = t < a ? a : t, { width: o, height: n } } }, getViewportSize: { configurable: !0, enumerable: !0, value: () => { let e, t; return self.innerHeight ? (e = self.innerWidth, t = self.innerHeight) : document.documentElement && document.documentElement.clientHeight ? (e = document.documentElement.clientWidth, t = document.documentElement.clientHeight) : document.body && (e = document.body.clientWidth, t = document.body.clientHeight), { width: e, height: t } } }, getSize: { configurable: !0, enumerable: !0, value: e => { let t, o; return t = e.offsetWidth, o = e.offsetHeight, { width: t, height: o } } }, getRand: { configurable: !0, enumerable: !0, value: (e, t) => { let o, n; return e > t ? (o = e, n = t) : (o = t, n = e), Math.floor(Math.random() * (n - o + 1) + o) } }, grabStyleSheet: { configurable: !0, enumerable: !0, value: function () { return navigator.customStyleSheet || (navigator.customStyleSheet = document.createElement("style"), document.head.appendChild(navigator.customStyleSheet), navigator.customStyleSheet) } }, addStylesheetRules: { configurable: !0, enumerable: !0, value: function (e = "", t = {}, o = this.grabStyleSheet()) { if (!e || !Object.keys(t).length || !o.sheet) return; let n, r, a; if (a = /keyframes/i.test(e) ? "" : ";", o = o.sheet, n = Object.keys(t).reduce(((e, o) => { let n; return n = /^\{.*\}$/.test(t[o]) ? "" : ":", e.concat([`${o}${n}${t[o]}`]) }), []).join(a), r = Array.from(o.cssRules).findIndex((t => t.selectorText == e)), -1 !== r) try { o.cssRules[r].style.cssText = n } catch (e) { } else try { o.insertRule(`${e}{${n}}`, o.cssRules.length) } catch (e) { } } } }), window._wcl = e }();